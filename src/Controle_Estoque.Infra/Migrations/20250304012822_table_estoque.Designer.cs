// <auto-generated />
using System;
using Controle_Estoque.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Controle_Estoque.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250304012822_table_estoque")]
    partial class table_estoque
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Empresas.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("Empresas", (string)null);
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Estoques.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificador")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FilialId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Estoques", (string)null);
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Filiais.Filial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Filiais", (string)null);
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Movimentacoes.Movimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimentacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FilialId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Movimentacoes", (string)null);
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Produtos.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FilialId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FilialId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Estoques.Estoque", b =>
                {
                    b.HasOne("Controle_Estoque.Domain.Entidades.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("Controle_Estoque.Domain.Entidades.Filiais.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId");

                    b.HasOne("Controle_Estoque.Domain.Entidades.Produtos.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Filial");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Filiais.Filial", b =>
                {
                    b.HasOne("Controle_Estoque.Domain.Entidades.Empresas.Empresa", "Empresa")
                        .WithMany("Filiais")
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Movimentacoes.Movimentacao", b =>
                {
                    b.HasOne("Controle_Estoque.Domain.Entidades.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.HasOne("Controle_Estoque.Domain.Entidades.Filiais.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId");

                    b.HasOne("Controle_Estoque.Domain.Entidades.Produtos.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Filial");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Produtos.Produto", b =>
                {
                    b.HasOne("Controle_Estoque.Domain.Entidades.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("Controle_Estoque.Domain.Entidades.Filiais.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId");

                    b.Navigation("Empresa");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("Controle_Estoque.Domain.Entidades.Empresas.Empresa", b =>
                {
                    b.Navigation("Filiais");
                });
#pragma warning restore 612, 618
        }
    }
}
